package bnet.protocol.account;
import "bnet/entity.proto";


message AccountId {
	required fixed32 id = 1;
}

message AccountLicense {
	required uint32 id = 1;
	optional uint64 expires = 2;
}

message AccountCredential {
	required uint32 id = 1;
	optional bytes data = 2;
}

message AccountBlob {
	required fixed32 id = 2;
	required uint32 region = 3;
	repeated string email = 4;
	required uint64 flags = 5;
	optional uint64 secure_release = 6;
	optional uint64 whitelist_start = 7;
	optional uint64 whitelist_end = 8;
	required string full_name = 10;
	repeated AccountLicense licenses = 20;
	repeated AccountCredential credentials = 21;
	repeated GameAccountLink account_links = 22;
	optional string battle_tag = 23;
	optional fixed32 default_currency = 25;
	optional uint32 legal_region = 26;
	optional fixed32 legal_locale = 27;
	required uint64 cache_expiration = 30;
	optional ParentalControlInfo parental_control_info = 31;
	optional string country = 32;
	optional uint32 preferred_region = 33;
}

message AccountBlobList {
	repeated AccountBlob blob = 1;
}

message GameAccountHandle {
	required fixed32 id = 1;
	required fixed32 program = 2;
	required uint32 region = 3;
}

message GameAccountLink {
	required GameAccountHandle game_account = 1;
	required string name = 2;
}

message GameAccountBlob {
	required GameAccountHandle game_account = 1;
	optional string name = 2 [default = ""];
	optional uint32 realm_permissions = 3 [default = 0];
	required uint32 status = 4;
	optional uint64 flags = 5 [default = 0];
	optional uint32 billing_flags = 6 [default = 0];
	required uint64 cache_expiration = 7;
	optional uint64 subscription_expiration = 10;
	optional uint32 units_remaining = 11;
	optional uint64 status_expiration = 12;
	optional uint32 box_level = 13;
	optional uint64 box_level_expiration = 14;
	repeated AccountLicense licenses = 20;
}

message GameAccountBlobList {
	repeated GameAccountBlob blob = 1;
}

message AccountReference {
	optional fixed32 id = 1;
	optional string email = 2;
	optional GameAccountHandle handle = 3;
	optional string battle_tag = 4;
	optional uint32 region = 10 [default = 0];
}

message Wallet {
	required uint32 region = 1;
	required uint64 wallet_id = 2;
	required uint32 wallet_type = 3;
	optional string description = 4;
	required uint32 country_id = 5;
	optional string state = 6;
	optional string city = 7;
	optional string postal_code = 8;
	optional bytes payment_info = 9;
	optional string bin = 10;
	optional string locale_id = 11;
	optional string street = 12;
	optional string first_name = 13;
	optional string last_name = 14;
	optional uint64 birth_date = 15;
}

message Wallets {
	repeated Wallet wallets = 1;
}

message CurrencyRestriction {
	required string currency = 1;
	required string authenticator_cap = 2;
	required string soft_cap = 3;
}

message ProgramTag {
	optional fixed32 program = 1;
	optional fixed32 tag = 2;
}

message RegionTag {
	optional fixed32 region = 1;
	optional fixed32 tag = 2;
}

message AccountFieldTags {
	optional fixed32 account_level_info_tag = 2;
	optional fixed32 privacy_info_tag = 3;
	optional fixed32 parental_control_info_tag = 4;
	repeated ProgramTag game_level_info_tags = 7;
	repeated ProgramTag game_status_tags = 9;
	repeated RegionTag game_account_tags = 11;
}

message GameAccountFieldTags {
	optional fixed32 game_level_info_tag = 2;
	optional fixed32 game_time_info_tag = 3;
	optional fixed32 game_status_tag = 4;
}

message AccountFieldOptions {
	optional bool all_fields = 1;
	optional bool field_account_level_info = 2;
	optional bool field_privacy_info = 3;
	optional bool field_parental_control_info = 4;
	optional bool field_game_level_info = 6;
	optional bool field_game_status = 7;
	optional bool field_game_accounts = 8;
}

message GameAccountFieldOptions {
	optional bool all_fields = 1;
	optional bool field_game_level_info = 2;
	optional bool field_game_time_info = 3;
	optional bool field_game_status = 4;
}

message SubscriberReference {
	optional uint64 object_id = 1 [default = 0];
	optional EntityId entity_id = 2;
	optional AccountFieldOptions account_options = 3;
	optional AccountFieldTags account_tags = 4;
	optional GameAccountFieldOptions game_account_options = 5;
	optional GameAccountFieldTags game_account_tags = 6;
}

message AccountLevelInfo {
	repeated AccountLicense licenses = 3;
	optional fixed32 default_currency = 4;
	optional string country = 5;
	optional uint32 preferred_region = 6;
}

message PrivacyInfo {
	enum GameInfoPrivacy {
		PRIVACY_ME = 0;
		PRIVACY_FRIENDS = 1;
		PRIVACY_EVERYONE = 2;
	}

	optional bool is_using_rid = 3;
	optional bool is_real_id_visible_for_view_friends = 4;
	optional bool is_hidden_from_friend_finder = 5;
	optional GameInfoPrivacy game_info_privacy = 6 [default = PRIVACY_FRIENDS];
}

message ParentalControlInfo {
	optional string timezone = 3;
	optional uint32 minutes_per_day = 4;
	optional uint32 minutes_per_week = 5;
	optional bool can_receive_voice = 6;
	optional bool can_send_voice = 7;
	repeated bool play_schedule = 8;
}

message GameLevelInfo {
	optional bool is_starter_edition = 3;
	optional bool is_trial = 4;
	optional bool is_lifetime = 5;
	optional bool is_restricted = 6;
	optional bool is_beta = 7;
	optional string name = 8;
	optional fixed32 program = 9;
	repeated AccountLicense licenses = 10;
	optional uint32 realm_permissions = 11;
}

message GameTimeInfo {
	optional bool is_unlimited_play_time = 3;
	optional uint64 play_time_expires = 5;
	optional bool is_subscription = 6;
	optional bool is_recurring_subscription = 7;
}

message GameTimeRemainingInfo {
	optional uint32 minutes_remaining = 1;
	optional uint32 parental_daily_minutes_remaining = 2;
	optional uint32 parental_weekly_minutes_remaining = 3;
}

message GameStatus {
	optional bool is_suspended = 4;
	optional bool is_banned = 5;
	optional uint64 suspension_expires = 6;
	optional fixed32 program = 7;
}

message GameSessionInfo {
	optional uint32 start_time = 3;
	optional GameSessionLocation location = 4;
	optional bool has_benefactor = 5;
	optional bool is_using_igr = 6;
	optional bool parental_controls_active = 7;
}

message GameSessionUpdateInfo {
	optional CAIS cais = 8;
}

message GameSessionLocation {
	optional string ip_address = 1;
	optional uint32 country = 2;
	optional string city = 3;
}

message CAIS {
	optional uint32 played_minutes = 1;
	optional uint32 rested_minutes = 2;
	optional uint64 last_heard_time = 3;
}

message GameAccountList {
	optional uint32 region = 3;
	repeated GameAccountHandle handle = 4;
}

message AccountState {
	optional AccountLevelInfo account_level_info = 1;
	optional PrivacyInfo privacy_info = 2;
	optional ParentalControlInfo parental_control_info = 3;
	repeated GameLevelInfo game_level_info = 5;
	repeated GameStatus game_status = 6;
	repeated GameAccountList game_accounts = 7;
}

message AccountStateTagged {
	optional AccountState account_state = 1;
	optional AccountFieldTags tags = 2;
}

message GameAccountState {
	optional GameLevelInfo game_level_info = 1;
	optional GameTimeInfo game_time_info = 2;
	optional GameStatus game_status = 3;
}

message GameAccountStateTagged {
	optional GameAccountState game_account_state = 1;
	optional GameAccountFieldTags game_account_tags = 2;
}
