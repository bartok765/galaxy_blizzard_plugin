package bnet.protocol.channel;
import "bnet/attribute.proto";
import "bnet/entity.proto";
import "bnet/invitation_types.proto";


message Message {
	repeated attribute.Attribute attribute = 1;
	optional uint32 role = 2;
}

message FindChannelOptions {
	optional uint32 start_index = 1 [default = 0];
	optional uint32 max_results = 2 [default = 16];
	optional string name = 3;
	optional fixed32 program = 4;
	optional fixed32 locale = 5;
	optional uint32 capacity_full = 6;
	required attribute.AttributeFilter attribute_filter = 7;
	optional string channel_type = 8;
}

message ChannelDescription {
	required EntityId channel_id = 1;
	optional uint32 current_members = 2;
	optional ChannelState state = 3;
}

message ChannelInfo {
	required ChannelDescription description = 1;
	repeated Member member = 2;
}

message ChannelState {
	enum PrivacyLevel {
		PRIVACY_LEVEL_OPEN = 1;
		PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND = 2;
		PRIVACY_LEVEL_OPEN_INVITATION = 3;
		PRIVACY_LEVEL_CLOSED = 4;
	}

	optional uint32 max_members = 1;
	optional uint32 min_members = 2;
	repeated attribute.Attribute attribute = 3;
	repeated invitation.Invitation invitation = 4;
	optional uint32 max_invitations = 5;
	optional uint32 reason = 6;
	optional PrivacyLevel privacy_level = 7 [default = PRIVACY_LEVEL_OPEN];
	optional string name = 8;
	optional string delegate_name = 9;
	optional string channel_type = 10 [default = "default"];
	optional fixed32 program = 11 [default = 0];
	optional bool allow_offline_members = 12 [default = false];
	optional bool subscribe_to_presence = 13 [default = true];
	extensions 100 to 10000;
}

message MemberState {
	repeated attribute.Attribute attribute = 1;
	repeated uint32 role = 2 [packed = true];
	optional uint64 privileges = 3 [default = 0];
	optional AccountInfo info = 4;
	optional bool hidden = 5 [default = false];
}

message Member {
	required Identity identity = 1;
	required MemberState state = 2;
}
