import asyncio
import inspect
import json
from unittest.mock import patch, MagicMock, Mock
import pytest
import plugin

from src.backend import BackendClient
from src.local_client import LocalClient

from tests.async_mock import AsyncMock
from tests.website_mocks import user_info, credentials


@pytest.fixture()
def load_database():
    db_content = '0A FB 01 0A 05 61 67 65 6E 74 12 05 61 67 65 6E 74 1A 39 0A 1F 43 3A 2F 50 72 6F 67 72 61 6D 44 61 74 61 2F 42 61 74 74 6C 65 2E 6E 65 74 2F 41 67 65 6E 74 12 02 65 75 18 00 20 00 28 00 32 00 3A 00 4A 00 52 00 5A 00 62 00 6A 00 22 A2 01 0A 73 08 01 10 01 18 01 20 00 28 01 3A 0B 32 2E 31 36 2E 33 2E 36 36 31 30 42 26 0A 02 65 75 12 20 32 65 65 39 65 37 62 64 66 62 32 34 38 34 32 31 62 66 39 37 36 30 31 37 35 34 31 31 34 63 31 38 42 28 0A 04 6C 61 73 74 12 20 32 65 65 39 65 37 62 64 66 62 32 34 38 34 32 31 62 66 39 37 36 30 31 37 35 34 31 31 34 63 31 38 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 07 10 80 80 80 80 B0 57 32 00 38 00 0A 97 02 0A 02 73 31 12 02 73 31 1A 51 0A 20 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 53 74 61 72 43 72 61 66 74 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 55 53 3A 04 65 6E 55 53 42 08 0A 04 65 6E 55 53 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 AC 01 0A 79 08 01 10 01 18 01 20 00 28 01 3A 0B 31 2E 32 32 2E 33 2E 35 33 35 34 42 26 0A 02 65 75 12 20 32 30 63 33 35 39 32 35 37 63 64 34 31 32 64 34 33 64 39 32 38 37 39 37 34 36 37 30 61 32 38 61 42 28 0A 04 6C 61 73 74 12 20 32 30 63 33 35 39 32 35 37 63 64 34 31 32 64 34 33 64 39 32 38 37 39 37 34 36 37 30 61 32 38 61 42 04 0A 00 12 00 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 15 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 C1 B4 C1 DF 17 28 00 2A 07 10 83 80 80 80 B0 57 32 00 38 00 0A 93 02 0A 0A 62 61 74 74 6C 65 2E 6E 65 74 12 03 62 6E 61 1A 4D 0A 21 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 42 61 74 74 6C 65 2E 6E 65 74 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 47 42 3A 04 65 6E 47 42 42 08 0A 04 65 6E 47 42 10 03 4A 00 52 00 5A 00 62 00 6A 00 22 A3 01 0A 74 08 01 10 01 18 01 20 00 28 01 3A 0C 31 2E 31 32 2E 38 2E 31 30 39 34 39 42 26 0A 02 65 75 12 20 63 35 65 32 34 39 34 63 32 32 65 34 63 37 37 36 38 65 64 61 32 64 37 34 64 38 38 37 61 33 32 36 42 28 0A 04 6C 61 73 74 12 20 63 35 65 32 34 39 34 63 32 32 65 34 63 37 37 36 38 65 64 61 32 64 37 34 64 38 38 37 61 33 32 36 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 07 10 80 80 80 80 C0 57 32 00 38 00 0A 9C 02 0A 0C 64 69 61 62 6C 6F 33 5F 70 6C 70 6C 12 02 64 33 1A 52 0A 21 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 44 69 61 62 6C 6F 20 49 49 49 12 02 65 75 18 02 20 02 28 03 32 04 70 6C 50 4C 3A 04 70 6C 50 4C 42 08 0A 04 70 6C 50 4C 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 A6 01 0A 73 08 01 10 01 18 01 20 00 28 01 3A 0B 32 2E 36 2E 34 2E 35 35 34 33 30 42 26 0A 02 65 75 12 20 63 38 63 66 66 36 62 37 34 62 37 36 38 39 37 61 39 36 36 31 30 61 38 33 36 37 30 34 33 39 63 32 42 28 0A 04 6C 61 73 74 12 20 63 38 63 66 66 36 62 37 34 62 37 36 38 39 37 61 39 36 36 31 30 61 38 33 36 37 30 34 33 39 63 32 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 15 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 D7 9F DE 9B 3F 28 00 2A 07 10 80 80 80 80 C0 57 32 00 38 00 1A 62 0A 30 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 42 61 74 74 6C 65 2E 6E 65 74 2F 42 61 74 74 6C 65 2E 6E 65 74 2E 65 78 65 10 F8 14 1A 15 2F 69 6E 73 74 61 6C 6C 2F 64 69 61 62 6C 6F 33 5F 70 6C 70 6C 1A 14 2F 75 70 64 61 74 65 2F 64 69 61 62 6C 6F 33 5F 70 6C 70 6C 1A 0F 0A 09 41 67 65 6E 74 2E 65 78 65 10 90 84 01 22 49 0A 05 61 67 65 6E 74 12 40 61 35 34 65 61 62 66 34 65 38 31 65 38 30 63 36 31 63 32 32 62 63 61 30 38 65 31 61 62 66 63 38 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 22 47 0A 03 62 6E 61 12 40 65 62 31 38 37 37 63 35 64 38 30 33 35 61 30 61 33 66 61 33 37 38 65 35 35 38 37 61 65 30 63 63 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 2A 06 08 00 10 A0 8D 06 30 8A 9B 05 3A 02 73 31 3A 0A 62 61 74 74 6C 65 2E 6E 65 74'
    return bytes.fromhex(db_content)


@pytest.fixture()
def another_database():
    db_content = '0A FE 01 0A 05 61 67 65 6E 74 12 05 61 67 65 6E 74 1A 39 0A 1F 43 3A 2F 50 72 6F 67 72 61 6D 44 61 74 61 2F 42 61 74 74 6C 65 2E 6E 65 74 2F 41 67 65 6E 74 12 02 65 75 18 00 20 00 28 00 32 00 3A 00 4A 00 52 00 5A 00 62 00 6A 00 22 A2 01 0A 73 08 01 10 01 18 01 20 00 28 01 3A 0B 32 2E 31 36 2E 33 2E 36 36 31 30 42 26 0A 02 65 75 12 20 32 65 65 39 65 37 62 64 66 62 32 34 38 34 32 31 62 66 39 37 36 30 31 37 35 34 31 31 34 63 31 38 42 28 0A 04 6C 61 73 74 12 20 32 65 65 39 65 37 62 64 66 62 32 34 38 34 32 31 62 66 39 37 36 30 31 37 35 34 31 31 34 63 31 38 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 0A 10 81 80 80 80 F0 FF FF FF 7F 32 00 38 00 0A 93 02 0A 0A 62 61 74 74 6C 65 2E 6E 65 74 12 03 62 6E 61 1A 4D 0A 21 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 42 61 74 74 6C 65 2E 6E 65 74 12 02 65 75 18 02 20 02 28 03 32 04 70 6C 50 4C 3A 04 70 6C 50 4C 42 08 0A 04 70 6C 50 4C 10 03 4A 00 52 00 5A 00 62 00 6A 00 22 A3 01 0A 74 08 01 10 01 18 01 20 00 28 01 3A 0C 31 2E 31 32 2E 39 2E 31 30 39 37 39 42 26 0A 02 65 75 12 20 61 37 63 36 38 62 39 33 35 34 31 64 34 38 34 63 35 32 32 64 38 39 63 34 32 61 66 34 61 36 38 38 42 28 0A 04 6C 61 73 74 12 20 61 37 63 36 38 62 39 33 35 34 31 64 34 38 34 63 35 32 32 64 38 39 63 34 32 61 66 34 61 36 38 38 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 07 10 80 80 80 80 C0 57 32 00 38 00 0A 91 02 0A 08 64 65 73 74 69 6E 79 32 12 04 64 73 74 32 1A 4C 0A 11 44 3A 2F 62 6E 65 74 2F 44 65 73 74 69 6E 79 20 32 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 55 53 3A 04 65 6E 55 53 42 08 0A 04 70 6C 50 4C 10 03 42 08 0A 04 65 6E 55 53 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 A8 01 0A 79 08 01 10 01 18 01 20 00 28 01 3A 11 32 2E 31 2E 34 2E 31 20 28 35 36 32 35 39 37 37 29 42 26 0A 02 65 75 12 20 62 66 64 63 33 64 38 31 36 31 36 37 32 66 36 62 39 38 37 39 37 32 63 39 65 36 63 37 63 37 31 30 42 28 0A 04 6C 61 73 74 12 20 62 66 64 63 33 64 38 31 36 31 36 37 32 66 36 62 39 38 37 39 37 32 63 39 65 36 63 37 63 37 31 30 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 02 10 00 32 00 38 00 0A 8E 02 0A 0C 64 69 61 62 6C 6F 33 5F 70 6C 70 6C 12 02 64 33 1A 43 0A 12 44 3A 2F 62 6E 65 74 2F 44 69 61 62 6C 6F 20 49 49 49 12 02 65 75 18 02 20 02 28 03 32 04 70 6C 50 4C 3A 04 70 6C 50 4C 42 08 0A 04 70 6C 50 4C 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 AC 01 0A 79 08 01 10 01 18 01 20 00 28 01 3A 0B 32 2E 36 2E 34 2E 35 35 34 33 30 42 26 0A 02 65 75 12 20 63 38 63 66 66 36 62 37 34 62 37 36 38 39 37 61 39 36 36 31 30 61 38 33 36 37 30 34 33 39 63 32 42 28 0A 04 6C 61 73 74 12 20 63 38 63 66 66 36 62 37 34 62 37 36 38 39 37 61 39 36 36 31 30 61 38 33 36 37 30 34 33 39 63 32 42 04 0A 00 12 00 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 15 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 D7 9F DE 9B 3F 28 00 2A 02 10 00 32 00 38 00 0A 87 02 0A 07 68 73 5F 62 65 74 61 12 03 68 73 62 1A 44 0A 13 44 3A 2F 62 6E 65 74 2F 48 65 61 72 74 68 73 74 6F 6E 65 12 02 65 75 18 02 20 02 28 03 32 04 70 6C 50 4C 3A 04 70 6C 50 4C 42 08 0A 04 70 6C 50 4C 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 A3 01 0A 74 08 01 10 01 18 01 20 00 28 01 3A 0C 31 33 2E 32 2E 30 2E 32 38 38 35 35 42 26 0A 02 65 75 12 20 66 34 65 38 37 39 63 33 30 32 65 64 63 32 33 62 66 39 32 61 63 61 36 66 62 65 30 38 35 66 35 66 42 28 0A 04 6C 61 73 74 12 20 66 34 65 38 37 39 63 33 30 32 65 64 63 32 33 62 66 39 32 61 63 61 36 66 62 65 30 38 35 66 35 66 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 07 10 80 80 80 80 B0 57 32 00 38 00 0A 9D 02 0A 06 68 65 72 6F 65 73 12 04 68 65 72 6F 1A 4C 0A 1B 44 3A 2F 62 6E 65 74 2F 48 65 72 6F 65 73 20 6F 66 20 74 68 65 20 53 74 6F 72 6D 12 02 65 75 18 02 20 02 28 03 32 04 70 6C 50 4C 3A 04 70 6C 50 4C 42 08 0A 04 70 6C 50 4C 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 AD 01 0A 7A 08 01 10 01 18 01 20 00 28 01 3A 0C 32 2E 34 33 2E 32 2E 37 32 34 38 31 42 26 0A 02 65 75 12 20 37 34 31 30 38 62 34 38 37 37 63 62 35 62 37 63 38 34 39 64 35 35 63 31 37 39 36 35 61 31 35 66 42 28 0A 04 6C 61 73 74 12 20 37 34 31 30 38 62 34 38 37 37 63 62 35 62 37 63 38 34 39 64 35 35 63 31 37 39 36 35 61 31 35 66 42 04 0A 00 12 00 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 15 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 E9 9A AC EA 31 28 00 2A 07 10 80 80 80 80 B0 57 32 04 68 65 72 6F 38 00 0A 88 02 0A 02 73 31 12 02 73 31 1A 42 0A 11 44 3A 2F 62 6E 65 74 2F 53 74 61 72 43 72 61 66 74 12 02 65 75 18 02 20 02 28 03 32 04 70 6C 50 4C 3A 04 70 6C 50 4C 42 08 0A 04 70 6C 50 4C 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 AC 01 0A 79 08 01 10 01 18 01 20 00 28 01 3A 0B 31 2E 32 32 2E 33 2E 35 33 35 34 42 26 0A 02 65 75 12 20 32 30 63 33 35 39 32 35 37 63 64 34 31 32 64 34 33 64 39 32 38 37 39 37 34 36 37 30 61 32 38 61 42 28 0A 04 6C 61 73 74 12 20 32 30 63 33 35 39 32 35 37 63 64 34 31 32 64 34 33 64 39 32 38 37 39 37 34 36 37 30 61 32 38 61 42 04 0A 00 12 00 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 15 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 E8 CA A7 A0 18 28 00 2A 07 10 80 80 80 80 B0 57 32 00 38 00 0A 90 02 0A 07 73 32 5F 70 6C 70 6C 12 02 73 32 1A 45 0A 14 44 3A 2F 62 6E 65 74 2F 53 74 61 72 43 72 61 66 74 20 49 49 12 02 65 75 18 02 20 02 28 03 32 04 70 6C 50 4C 3A 04 70 6C 50 4C 42 08 0A 04 70 6C 50 4C 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 AC 01 0A 79 08 01 10 01 18 01 20 00 28 01 3A 0B 34 2E 38 2E 33 2E 37 32 32 38 32 42 26 0A 02 65 75 12 20 35 62 34 39 63 35 33 63 66 61 65 62 30 36 36 62 32 31 63 39 63 31 66 65 62 36 61 33 30 64 64 64 42 28 0A 04 6C 61 73 74 12 20 35 62 34 39 63 35 33 63 66 61 65 62 30 36 36 62 32 31 63 39 63 31 66 65 62 36 61 33 30 64 64 64 42 04 0A 00 12 00 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 15 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 F7 C9 DB AE 5D 28 00 2A 07 10 80 80 80 80 B0 57 32 00 38 00 0A AD 02 0A 08 77 6F 77 5F 65 6E 75 73 12 03 77 6F 77 1A 5C 0A 19 44 3A 2F 62 6E 65 74 2F 57 6F 72 6C 64 20 6F 66 20 57 61 72 63 72 61 66 74 12 02 65 75 18 02 20 02 28 03 32 04 72 75 52 55 3A 04 72 75 52 55 42 08 0A 04 72 75 52 55 10 03 42 08 0A 04 70 74 42 52 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 08 5F 72 65 74 61 69 6C 5F 22 AD 01 0A 79 08 01 10 01 18 01 20 00 28 01 3A 0B 38 2E 31 2E 30 2E 32 39 34 38 32 42 26 0A 02 65 75 12 20 32 37 66 63 30 33 31 37 62 31 61 34 38 37 31 66 33 33 61 61 36 35 38 30 64 66 34 34 37 38 39 62 42 28 0A 04 6C 61 73 74 12 20 32 37 66 63 30 33 31 37 62 31 61 34 38 37 31 66 33 33 61 61 36 35 38 30 64 66 34 34 37 38 39 62 42 04 0A 00 12 00 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 16 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 EE C3 BD 9C DC 01 28 00 2A 07 10 80 80 80 80 B0 57 32 03 77 6F 77 38 00 1A 86 01 0A 30 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 42 61 74 74 6C 65 2E 6E 65 74 2F 42 61 74 74 6C 65 2E 6E 65 74 2E 65 78 65 10 B8 96 03 1A 0A 2F 75 70 64 61 74 65 2F 73 31 1A 0F 2F 75 70 64 61 74 65 2F 73 32 5F 70 6C 70 6C 1A 0E 2F 75 70 64 61 74 65 2F 68 65 72 6F 65 73 1A 0F 2F 75 70 64 61 74 65 2F 68 73 5F 62 65 74 61 1A 10 2F 75 70 64 61 74 65 2F 77 6F 77 5F 65 6E 75 73 22 49 0A 05 61 67 65 6E 74 12 40 61 35 34 65 61 62 66 34 65 38 31 65 38 30 63 36 31 63 32 32 62 63 61 30 38 65 31 61 62 66 63 38 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 22 47 0A 03 62 6E 61 12 40 63 62 34 33 33 34 32 61 65 30 31 36 32 35 38 62 62 62 62 63 32 33 30 30 64 30 39 39 35 66 37 33 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 2A 06 08 00 10 A0 8D 06 30 8D A2 05'
    return bytes.fromhex(db_content)


@pytest.fixture()
def db_under_installation():
    """heroes under installation, over "PLAYABLE"; s1 queued for installation"""
    db_content = '0A FB 01 0A 05 61 67 65 6E 74 12 05 61 67 65 6E 74 1A 39 0A 1F 43 3A 2F 50 72 6F 67 72 61 6D 44 61 74 61 2F 42 61 74 74 6C 65 2E 6E 65 74 2F 41 67 65 6E 74 12 02 65 75 18 00 20 00 28 00 32 00 3A 00 4A 00 52 00 5A 00 62 00 6A 00 22 A2 01 0A 73 08 01 10 01 18 01 20 00 28 01 3A 0B 32 2E 31 36 2E 33 2E 36 36 31 30 42 26 0A 02 65 75 12 20 32 65 65 39 65 37 62 64 66 62 32 34 38 34 32 31 62 66 39 37 36 30 31 37 35 34 31 31 34 63 31 38 42 28 0A 04 6C 61 73 74 12 20 32 65 65 39 65 37 62 64 66 62 32 34 38 34 32 31 62 66 39 37 36 30 31 37 35 34 31 31 34 63 31 38 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 07 10 80 80 80 80 B0 57 32 00 38 00 0A 93 02 0A 0A 62 61 74 74 6C 65 2E 6E 65 74 12 03 62 6E 61 1A 4D 0A 21 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 42 61 74 74 6C 65 2E 6E 65 74 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 55 53 3A 04 65 6E 55 53 42 08 0A 04 65 6E 55 53 10 03 4A 00 52 00 5A 00 62 00 6A 00 22 A3 01 0A 74 08 01 10 01 18 01 20 00 28 01 3A 0C 31 2E 31 32 2E 39 2E 31 30 39 37 39 42 26 0A 02 65 75 12 20 61 37 63 36 38 62 39 33 35 34 31 64 34 38 34 63 35 32 32 64 38 39 63 34 32 61 66 34 61 36 38 38 42 28 0A 04 6C 61 73 74 12 20 61 37 63 36 38 62 39 33 35 34 31 64 34 38 34 63 35 32 32 64 38 39 63 34 32 61 66 34 61 36 38 38 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 07 10 80 80 80 80 C0 57 32 00 38 00 0A 9F 02 0A 07 73 32 5F 65 6E 67 62 12 02 73 32 1A 54 0A 23 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 53 74 61 72 43 72 61 66 74 20 49 49 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 55 53 3A 04 65 6E 55 53 42 08 0A 04 65 6E 55 53 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 AC 01 0A 79 08 01 10 01 18 01 20 00 28 01 3A 0B 34 2E 38 2E 33 2E 37 32 32 38 32 42 26 0A 02 65 75 12 20 35 62 34 39 63 35 33 63 66 61 65 62 30 36 36 62 32 31 63 39 63 31 66 65 62 36 61 33 30 64 64 64 42 28 0A 04 6C 61 73 74 12 20 35 62 34 39 63 35 33 63 66 61 65 62 30 36 36 62 32 31 63 39 63 31 66 65 62 36 61 33 30 64 64 64 42 04 0A 00 12 00 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 15 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 9E 8C CF C1 5D 28 00 2A 07 10 80 80 80 80 B0 57 32 00 38 00 0A 9C 02 0A 0C 64 69 61 62 6C 6F 33 5F 65 6E 75 73 12 02 64 33 1A 52 0A 21 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 44 69 61 62 6C 6F 20 49 49 49 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 55 53 3A 04 65 6E 55 53 42 08 0A 04 65 6E 55 53 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 A6 01 0A 73 08 01 10 01 18 01 20 00 28 01 3A 0B 32 2E 36 2E 34 2E 35 35 34 33 30 42 26 0A 02 65 75 12 20 63 38 63 66 66 36 62 37 34 62 37 36 38 39 37 61 39 36 36 31 30 61 38 33 36 37 30 34 33 39 63 32 42 28 0A 04 6C 61 73 74 12 20 63 38 63 66 66 36 62 37 34 62 37 36 38 39 37 61 39 36 36 31 30 61 38 33 36 37 30 34 33 39 63 32 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 15 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 95 E0 F6 AD 3E 28 00 2A 07 10 80 80 80 80 C0 57 32 00 38 00 0A 96 02 0A 07 68 73 5F 62 65 74 61 12 03 68 73 62 1A 53 0A 22 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 48 65 61 72 74 68 73 74 6F 6E 65 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 55 53 3A 04 65 6E 55 53 42 08 0A 04 65 6E 55 53 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 A3 01 0A 74 08 01 10 01 18 01 20 00 28 01 3A 0C 31 33 2E 32 2E 30 2E 32 38 38 35 35 42 26 0A 02 65 75 12 20 66 34 65 38 37 39 63 33 30 32 65 64 63 32 33 62 66 39 32 61 63 61 36 66 62 65 30 38 35 66 35 66 42 28 0A 04 6C 61 73 74 12 20 66 34 65 38 37 39 63 33 30 32 65 64 63 32 33 62 66 39 32 61 63 61 36 66 62 65 30 38 35 66 35 66 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 F0 3F 18 00 20 00 28 00 2A 07 10 80 80 80 80 B0 57 32 00 38 00 0A AC 02 0A 06 68 65 72 6F 65 73 12 04 68 65 72 6F 1A 5B 0A 2A 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 48 65 72 6F 65 73 20 6F 66 20 74 68 65 20 53 74 6F 72 6D 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 55 53 3A 04 65 6E 55 53 42 08 0A 04 65 6E 55 53 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 AB 01 0A 74 08 01 10 01 18 00 20 00 28 01 3A 0C 32 2E 34 33 2E 33 2E 37 32 36 34 39 42 26 0A 02 65 75 12 20 65 63 30 65 32 36 33 65 65 65 31 36 39 30 39 64 35 33 63 36 38 31 30 64 38 37 63 63 35 66 64 37 42 28 0A 04 6C 61 73 74 12 20 65 63 30 65 32 36 33 65 65 65 31 36 39 30 39 64 35 33 63 36 38 31 30 64 38 37 63 63 35 66 64 37 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 19 0A 00 11 5B 45 E0 F1 1A 88 D8 3F 18 00 20 B8 E0 FC 9C 31 28 F3 85 B7 AD 1E 2A 09 08 00 10 80 80 80 80 C0 57 32 04 68 65 72 6F 38 00 0A B1 01 0A 02 73 31 12 02 73 31 1A 51 0A 20 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 53 74 61 72 43 72 61 66 74 12 02 65 75 18 02 20 02 28 03 32 04 65 6E 55 53 3A 04 65 6E 55 53 42 08 0A 04 65 6E 55 53 10 03 4A 00 52 00 5A 03 50 4F 4C 62 02 50 4C 6A 00 22 45 0A 16 08 00 10 00 18 00 20 00 28 01 3A 00 4A 06 0A 02 65 75 12 00 52 00 12 0D 09 00 00 00 00 00 00 00 00 10 00 18 00 1A 09 09 00 00 00 00 00 00 00 00 22 11 0A 00 11 00 00 00 00 00 00 00 00 18 00 20 00 28 00 2A 09 08 00 10 80 80 80 80 C0 57 32 00 38 00 1A 6F 0A 30 43 3A 2F 50 72 6F 67 72 61 6D 20 46 69 6C 65 73 20 28 78 38 36 29 2F 42 61 74 74 6C 65 2E 6E 65 74 2F 42 61 74 74 6C 65 2E 6E 65 74 2E 65 78 65 10 D0 45 1A 0F 2F 69 6E 73 74 61 6C 6C 2F 68 65 72 6F 65 73 1A 0E 2F 75 70 64 61 74 65 2F 68 65 72 6F 65 73 1A 0B 2F 69 6E 73 74 61 6C 6C 2F 73 31 1A 0A 2F 75 70 64 61 74 65 2F 73 31 1A 0E 0A 09 41 67 65 6E 74 2E 65 78 65 10 F8 1A 22 49 0A 05 61 67 65 6E 74 12 40 61 35 34 65 61 62 66 34 65 38 31 65 38 30 63 36 31 63 32 32 62 63 61 30 38 65 31 61 62 66 63 38 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 22 47 0A 03 62 6E 61 12 40 63 62 34 33 33 34 32 61 65 30 31 36 32 35 38 62 62 62 62 63 32 33 30 30 64 30 39 39 35 66 37 33 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 2A 06 08 00 10 A0 8D 06 30 83 AD 05 3A 0C 64 69 61 62 6C 6F 33 5F 65 6E 75 73 3A 07 68 73 5F 62 65 74 61 3A 07 73 32 5F 65 6E 67 62 3A 06 68 65 72 6F 65 73 3A 02 73 31 3A 0A 62 61 74 74 6C 65 2E 6E 65 74'
    return bytes.fromhex(db_content)


@pytest.fixture()
def config_data():
    return json.loads("""{
    "Client": {
        "Version": {
            "FirstRun": "false",
            "Release": {
                "FirstRun": "false",
                "LastBuildVersion": "10979",
                "LastSeenPatchNotesVersion": "10979"
            }
        },
        "Toasts": {
            "ScreenPosition": "BottomRight",
            "Monitor": "0"
        },
        "GaClientId": "E70E3DEC-4C76-44D1-BA97-F3B87D7D5A4E",
        "AutoLogin": "true",
        "SavedAccountNames": "example-mail@example.com",
        "GameSearch": {
            "PerformedSearch": "true"
        }
    },
    "5a61123b37cafce1": {
        "Client": {
            "Language": "plPL",
            "LoginSettings": {
                "AllowedRegions": "",
                "AllowedLocales": ""
            }
        },
        "Path": "C:/Program Files (x86)/Battle.net",
        "Services": {
            "LastLoginAddress": "eu.actual.battle.net",
            "LastLoginRegion": "EU",
            "LastLoginTassadar": "eu.battle.net\/login"
        }
    },
    "Games": {
        "battle_net": {
            "ServerUid": "battle.net"
        },
        "destiny2": {
            "ServerUid": "destiny2"
        },
        "diablo3": {
            "ServerUid": "diablo3_plpl"
        },
        "heroes": {
            "LastPlayed": "1441712029"
        },
        "hs_beta": {
            "ServerUid": "hs_beta",
            "Resumable": "false"
        },
        "s1": {
            "ServerUid": "s1",
            "Resumable": "false"
        },
        "s2": {
            "ServerUid": "s2_plpl",
            "Resumable": "false"
        },
        "wow": {
            "ServerUid": "wow_enus",
            "Resumable": "true"
        }
    }
}""")


@pytest.fixture()
async def backend_mock():
    """Backend mock to be shared in tests. Assign return_value to methods particular test needs
    Note: Mock(spec=BackendClient) for async works only in python>=3.8,
    that is why we use our own AsyncMock and assign manually to every real BackendClient method
    """
    mock = MagicMock(spec=())
    mock.refresh_credentials = AsyncMock()
    mock.refresh_cookies = AsyncMock()
    mock.get_user_info = AsyncMock()
    mock.get_account_details = AsyncMock()
    mock.validate_access_token = AsyncMock()
    mock.get_owned_games = AsyncMock()
    mock.get_owned_classic_games = AsyncMock()
    mock.get_ow_player_data = AsyncMock()
    return mock

@pytest.fixture()
def config_parser():
    return MagicMock()

@pytest.fixture()
def local_client_mock(config_parser):
    mock = MagicMock(spec=LocalClient)
    mock.launch_game = AsyncMock()  # just an example of async method mock
    mock.get_running_games = MagicMock()
    mock.get_installed_games = MagicMock()
    mock.config_parser = config_parser
    return mock


@pytest.fixture()
def plugin_mock(mocker, backend_mock, local_client_mock):
    mocker.patch('pathlib.Path.exists')
    mocker.patch('plugin.BackendClient', return_value=backend_mock)
    mocker.patch('plugin.LocalClient', return_value=local_client_mock)
    return plugin.BNetPlugin(MagicMock(), MagicMock(), None)


@pytest.fixture()
async def authenticated_plugin(plugin_mock, backend_mock, user_info, credentials):
    backend_mock.get_user_info.return_value = user_info
    backend_mock.validate_access_token.return_value = credentials
    credentials = {
        "cookie_jar": "",
        "access_token": "ACCESS_TOKEN",
        "user_details_cache": {
            "battletag": "MOCK",
            "id": 420,
            "sub": "420"
        },
        "region": "eu"
    }
    await plugin_mock.authenticate(credentials)
    return plugin_mock


@pytest.fixture
def pg(authenticated_plugin):
    """Alias"""
    return authenticated_plugin
